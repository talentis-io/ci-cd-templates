name: SonarQube Analysis

on:
  workflow_call:
    inputs:
      project-key:
        required: true
        type: string
      project-name:
        required: true
        type: string
      sources:
        required: false
        type: string
        default: "src"
      language:
        required: false
        type: string
        default: "javascript"
      coverage-reports:
        required: false
        type: string
        default: "coverage/lcov.info"
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js (if JavaScript/TypeScript)
        if: contains(inputs.language, 'javascript') || contains(inputs.language, 'typescript')
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        if: contains(inputs.language, 'javascript') || contains(inputs.language, 'typescript')
        run: npm ci
      
      - name: Run tests with coverage
        if: contains(inputs.language, 'javascript') || contains(inputs.language, 'typescript')
        run: npm run test:coverage || npm test -- --coverage || echo "No coverage script found"
      
      - name: SonarQube Scan
        uses: sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ inputs.project-key }}
            -Dsonar.projectName=${{ inputs.project-name }}
            -Dsonar.sources=${{ inputs.sources }}
            -Dsonar.javascript.lcov.reportPaths=${{ inputs.coverage-reports }}
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/*.test.js,**/*.spec.js
      
      - name: Wait for Quality Gate
        uses: sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
