name: Notify Webhook

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
      branch_name:
        required: true
        type: string

jobs:
  send-kpi:
    runs-on: ubuntu-latest
    steps:
      - name: Notify backend webhook
        if: always()
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          REPO_NAME: ${{ inputs.repo_name }}
          BRANCH_NAME: ${{ inputs.branch_name }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          WORKFLOW: ${{ github.workflow }}
          ACTOR: ${{ github.actor }}
          EVENT: ${{ github.event_name }}
          SHA: ${{ github.sha }}
          STATUS: ${{ job.status }}
          TS: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        run: |
          PAYLOAD=$(jq -n \
            --arg repo "$REPO_NAME" \
            --arg branch "$BRANCH_NAME" \
            --arg sha "$SHA" \
            --arg run_id "$RUN_ID" \
            --arg run_number "$RUN_NUMBER" \
            --arg workflow "$WORKFLOW" \
            --arg actor "$ACTOR" \
            --arg event "$EVENT" \
            --arg status "$STATUS" \
            --arg sent_at "$TS" \
            '{
              type:"store_sonar_kpi",
              status:$status,
              repo:$repo,
              branch:$branch,
              sha:$sha,
              run_id:$run_id,
              run_number:$run_number,
              workflow:$workflow,
              actor:$actor,
              event:$event,
              sent_at:$sent_at
            }')

          SIG="sha256=$(printf "%s" "$PAYLOAD" | openssl dgst -sha256 -hmac "$WEBHOOK_SECRET" -binary | xxd -p -c 256)"

          ATTEMPTS=0; MAX=3; S=2
          until [ $ATTEMPTS -ge $MAX ]; do
            CODE=$(curl -sS -o /tmp/resp.txt -w "%{http_code}" -X POST "$WEBHOOK_URL" \
              -H "Content-Type: application/json" \
              -H "X-Hub-Signature-256: $SIG" \
              -H "X-Webhook-Timestamp: $TS" \
              -H "X-Webhook-Id: gha-${RUN_ID}" \
              --data "$PAYLOAD" || echo "000")

            if [ "$CODE" = "200" ] || [ "$CODE" = "201" ] || [ "$CODE" = "204" ]; then
              echo "Webhook OK (HTTP $CODE)"; cat /tmp/resp.txt || true; exit 0
            fi
            echo "Webhook échec (HTTP $CODE)"; cat /tmp/resp.txt || true
            ATTEMPTS=$((ATTEMPTS+1)); echo "Retry $ATTEMPTS/$MAX dans ${S}s…"; sleep $S; S=$((S*2))
          done

          echo "⚠ Webhook non délivré après $MAX tentatives (non bloquant)."
